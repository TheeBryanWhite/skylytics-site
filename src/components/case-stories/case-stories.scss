@import '../sass/mixins.scss';

.casestories {
	color: color(white);
	overflow: hidden;
	position: relative;

	@include respond-to(large) {
		border-top: solid 25px color(black);
		
	}

	h2 {
		font-size: toRem(32);
	}

	a {
		color: color(lightblue);
		font-weight: bold;
		transition: all 0.2s linear;

		&:hover {
			color: color(teal);
		}
	}

	ul {
		list-style: none;
	}

	li {
		margin-top: toRem(16);
	}

	button {
		border: 0;
		cursor: pointer;
		transition: background-color 0.2s linear;

		&:hover {
			background-color: color(lightblue);
		}
	}

	@include respond-to(large) {
		.bgmask {
			clip-path: polygon(0 0, 100% 0, 100% 100%, 0 83%);
			margin: 0 auto;
			max-width: 1440px;
		}
	}

	.columns {
		position: relative;

		@include respond-to(large) {
			height: 800px;
		}
	}

	@include respond-to(large) {
		.story-options {
			background-color: color(blue);
			overflow: hidden;
			width: 50%;
		}
	}

	.images-thumbs {
		align-items: stretch;
		display: flex;

		@include respond-to(large) {
			clip-path: polygon(0 0, 55% 0, 100% 100%, 0% 100%);
			flex-direction: column;
		}

		.gatsby-image-wrapper {
			height: 100%;
		}
	}

	@include respond-to(large) {
		.story-head,
		.story-meta {
			h2 {
				font-size: toRem(40);
			}

			h3 {
				font-size: toRem(32);
			}

			p {
				font-size: toRem(20);
			}
		}
	}

	.images-color,
	.story-body-container {
		height: 100vh;
		left: -200%;
		position: fixed;
		top: 0;
		transition: all 0.4s ease(in-out-quart);
		width: 100%;

		@include respond-to(large) {
			left: 0;
			position: absolute;
			z-index: -1;
		}

		.color-image,
		.gatsby-image-wrapper,
		.story-body {
			height: 100vh;

			@include respond-to(large) {
				height: auto;
			}
		}

		@include respond-to(large) {
			.color-image,
			.color-image .gatsby-image-wrapper {
				height: 100%;
			}
		}

		.color-image,
		.story-body {
			position: absolute;
			top: 0;
			width: 100%;
		}

		@include respond-to(large) {
			.color-image {
				left: -100%;
			}

			.story-body {
				top: 50%;
				transform: translateY(-50%);
			}
		}

		.color-image {
			transition: all 0.4s linear;
			z-index: -1;
		}
	}

	@include respond-to(large) {
		.images-color {
			clip-path: polygon(0 0, 55% 0, 100% 100%, 0% 100%);
			height: 750px;
			width: 50%;
		}
	}

	@include respond-to(large) {
		.story-body-container {
			left: 0;
		}
	}

	.story-head {
		opacity: 1;
		transition: all 0.4s linear;
	}

	&.expanded {
		.images-color,
		.story-body-container {
			left: 0;
			z-index: 900;

			@include respond-to(large) {
				z-index: 0;
			}
		}

		@include respond-to(large) {
			.images-color {
				z-index: 1;
			}

			.story-body-container {
				height: 750px;
			}
		}

		.expanded-image {
			left: 0;
			z-index: 0;
		}

		.story-head,
		.story-meta-container {
			opacity: 0;
		}
	}

	.bgcast {
		background-color: rgba(color(black), 0.5);
		bottom: 0;
		left: 0;
		position: absolute;
		right: 0;
		top: 0;
		z-index: 901;

		@include respond-to(large) {
			display: none;
		}
	}

	.story-img {
		background-color: color(blue);
		cursor: pointer;
		flex: 1;
		transition: all 0.4s linear;

		@include respond-to(large) {
			flex: auto;
			height: 300px;
			margin-top: -50px;

			&:nth-of-type(1) {
				clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%);
			}

			&:nth-of-type(2) {
				clip-path: polygon(0 16.8%, 100% -8.3%, 100% 83%, 0 84%);
			}

			&:nth-of-type(3) {
				clip-path: polygon(0 0, 100% 0, 100% 100%, 0 84%)
			}
		}

		&.active-image {
			background-color: transparent;
		}

		img {
			mix-blend-mode: overlay;
		}
	}

	.story {
		background-color: color(blue);
		padding: toRem(32);

		@include respond-to(large) {
			bottom: 0;
			padding: 0;
			position: absolute;
			right: 0;
			top: 0;
			width: 50%;
		}
	}

	.story-meta-container {
		opacity: 1;
		position: relative;
		transition: all 0.4s linear;
	}

	.story-meta {
		opacity: 0;
		position: absolute;
		top: 0;
		transition: all 0.4s linear;
		width: 100%;
		z-index: -1;

		&.active-story {
			opacity: 1;
			z-index: 1;
		}
	}

	.story-body {
		opacity: 0;
		overflow-y: scroll;
		padding: toRem(32);
		transition: all 0.4s linear;
		z-index: -1;

		@include respond-to(large) {
			overflow-y: visible;
			padding: 0;
		}

		&.expanded-story {
			opacity: 1;
			z-index: 902;

			@include respond-to(large) {
				padding-right: toRem(32);
			}
		}
	}

	@include respond-to(large) {
		.center-this {
			padding-right: toRem(32);
			position: absolute;
			top: 50%;
			transform: translateY(-50%);
		}
	}

	.cta {
		color: color(white);
		margin-top: toRem(24);

		&:after {
			content: '\2192';
			font-size: 24px;
			margin-left: 25px;
			transition: all 0.2s linear;
		}

		&.back:after {
			margin-left: 0;
			content: '';
		}

		&.back:before {
			content: '\2190';
			font-size: 24px;
			margin-right: 25px;
			transition: all 0.2s linear;
		}
	}
}