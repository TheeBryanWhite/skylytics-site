@import '../sass/mixins.scss';

.hero {
	background-color: color(herobg);
	color: color(white);
	margin-top: toRem(65);
	overflow: hidden;
	position: relative;
	z-index: 90;

	@include respond-to(large) {
		clip-path: polygon(0 0, 100% 0, 100% 73%, 0 100%, 0 53%);
	}

	a {
		color: color(white);
	}

	.container {
		display: flex;
		flex-direction: column;
		padding: toRem(100) toRem(32);

		@include respond-to(small) {
			padding: toRem(140) toRem(32);
		}

		@include respond-to(large) {
			padding: toRem(202) toRem(32);
		}
	}

	@include respond-to(large) { 
		.slides {
			clip-path: polygon(0 0, 100% 0, 100% 76%, 13% 100%, 0 53%);
			position: relative;
		}
	}

	.slidemask {
		height: 693px;
		position: relative;

		@include respond-to(large) {
			height: 822px;
		}
	}

	.slidecontainer {
		left: 0;
		position: absolute;
		top: 0;
		transition: all 0.6s ease(in-out-quart);
		width: 100%;
	}

	.slide {
		left: 50%;
		position: absolute !important;
		top: 50%;
	}

	.slidecontent {
		position: relative;
	}

	#slide0 {
		z-index: 1;

		.slide {
			animation: spin 600s linear infinite;
			height: 1639px;
			width: 1639px;
		}
	}

	#slide1 {
		transform: translateX(-100%);
		
		.slide {
			height: 1639px;
			transform: translate(-57%, -50%);
			width: 1639px;

			@include respond-to(large) {
				height: 825px;
			}
		}

		&.active {
			transform: translateX(0);
			z-index: 2;

			.slide {
				animation: panover 30s 1;
			}
		}
	}

	#slide2 {
		transform:  translateX(-100%);
		
		.slide {
			height: 1280px;
			transform: translate(-50%, -55%);
			width: 1920px;

			@include respond-to(large) {
				transform: translate(-57%, -65%);
			}
		}

		&.active {
			transform: translateX(0);
			z-index: 3;

			.slide {
				animation: panup 30s linear 1;
			}
		}
	}

	@keyframes spin {
		from { transform: translate(-50%, -50%) rotate(360deg) }
		to { transform: translate(-50%, -50%) rotate(0deg) }	
	}

	@keyframes panover {
		from { transform: translate(-50%, -50%) }
		to { transform: translate(-60%, -50%) }	
	}

	@keyframes panup {
		from { transform: translate(-50%, -50%) }
		to { transform: translate(-50%, -55%) }	
	}

	@include respond-to(large) {
		@keyframes panup {
			from { transform: translate(-57%, -50%) }
			to { transform: translate(-57%, -65%) }	
		}
	}

	.hero-copy {
		background-color: rgba(color(black), 0.4);
		align-self: flex-end;
		font-size: toRem(18);
		font-weight: 600;
		padding: toRem(16);
		text-align: right;

		@include respond-to(large) {
			background: transparent;
			font-size: toRem(24);
			margin-bottom: toRem(100);
			width: 60%;
		}

		h2 {
			font-size: toRem(24);
			font-weight: 400;

			@include respond-to(large) {
				font-size: toRem(32);
			}
		}

		p {
			font-weight: 400;
		}
	}

	.hero-cta {
		align-self: flex-start;
		bottom: toRem(95);
		font-weight: 700;
		left: 18%;
		position: absolute;
		z-index: 50;

		@include respond-to(large) {
			bottom: toRem(250);
		}

		ul {
			list-style: none;
		}

		li {
			margin: toRem(16) 0;

			span {
				display: inline-block;
				font-size: toRem(8);
				transform: translateY(-5px);
			}
		}

		.cta {

			&:after {
				content: '\2192';
				font-size: 24px;
				margin-left: 25px;
				transition: all 0.2s linear;
			}
		}
	}
}